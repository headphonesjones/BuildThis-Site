@import url(http://fonts.googleapis.com/css?family=Roboto:100,300,700|Lora);

@import url(_animate.css);

html {
  box-sizing: border-box;
}

*,
*::after,
*::before {
  box-sizing: inherit;
}

html,
body {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  overflow: hidden;
}

body {
  overflow: auto;
  -webkit-perspective: 1px;
  perspective: 1px;
  -webkit-transform-style: preserve-3d;
  transform-style: preserve-3d;
}

body,
body * {
  -webkit-transform-style: preserve-3d;
  transform-style: preserve-3d;
}

.project_builder_title_container {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 30px;
}

.project_builder_title_container::after {
  clear: both;
  content: "";
  display: table;
}

.project_builder_title_container h1 {
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 100%;
  font-family: "Lora", serif;
}

.project_builder_title_container h1:last-child {
  margin-right: 0;
}

.project_builder_container {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto;
  margin-top: 15px;
  overflow: hidden;
}

.project_builder_container::after {
  clear: both;
  content: "";
  display: table;
}

.project_builder_container .service_type_selection {
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 23.2317613015%;
  height: 251px;
  position: relative;
  transition: all 0.5s ease;
  overflow: hidden;
}

.project_builder_container .service_type_selection:last-child {
  margin-right: 0;
}

.project_builder_container .service_type_selection:nth-child(4n) {
  margin-right: 0;
}

.project_builder_container .service_type_selection:nth-child(4n+1) {
  clear: left;
}

.project_builder_container .service_type_selection:hover {
  cursor: pointer;
}

.project_builder_container .service_type_overlay {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  background-color: rgba(0, 0, 0, 0.5);
}

.project_builder_container .service_type_overlay h3 {
  color: #FFFFFF;
  text-align: center;
  position: relative;
  top: 80px;
  font-size: 1.6em;
  letter-spacing: 1.5px;
  text-transform: uppercase;
}

.primary_input {
  width: 100%;
  background-color: transparent;
  border: 2px solid #96244E;
  outline: 0;
  font-size: 1.6em;
  letter-spacing: 1.5px;
  padding: 10px;
  margin-bottom: 10px;
  font-family: "Lora", serif;
}

label {
  font-size: 1.2em;
  letter-spacing: 1.5px;
  margin-bottom: 10px;
  font-family: "Roboto", sans-serif;
}

.project_cart_title {
  color: green;
  text-transform: uppercase;
  position: absolute;
  top: 100px;
  left: 55px;
  opacity: 0;
  max-width: 68em;
  margin-left: auto;
  margin-right: auto;
  margin-left: 8.5298042998%;
}

.project_cart_title::after {
  clear: both;
  content: "";
  display: table;
}

.project_builder_second_container {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto;
  overflow-x: hidden;
}

.project_builder_second_container::after {
  clear: both;
  content: "";
  display: table;
}

.project_builder_second_container .service_secondary_selection {
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 6.1721527019%;
  background-color: #96244E;
  text-align: center;
  transition: all 0.5s ease;
  color: #FFFFFF;
}

.project_builder_second_container .service_secondary_selection:last-child {
  margin-right: 0;
}

.project_builder_second_container .service_secondary_selection img {
  width: 68px;
  transition: all 0.5s ease;
}

.project_builder_second_container .service_secondary_selection:hover {
  background-color: green;
  cursor: pointer;
}

.project_builder_second_container .first-second-selection {
  margin-left: 25.5894128995%;
}

.project_builder_second_container .add_components_title {
  margin-left: 25.5894128995%;
  color: green;
  text-transform: uppercase;
}

.second_container {
  position: relative;
  top: -275px;
  opacity: 0;
  z-index: -1;
}

.secondary_item_title {
  margin-top: 4px;
  margin-bottom: 4px;
  font-size: .6em;
}

.second_container_row {
  margin-top: 20px;
}

#project-cart-container {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto;
}

#project-cart-container::after {
  clear: both;
  content: "";
  display: table;
}

#project-cart-container #project-cart {
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 23.2317613015%;
  position: relative;
  top: -331px;
}

#project-cart-container #project-cart:last-child {
  margin-right: 0;
}

#next-button-project-builder {
  margin-left: 53%;
  margin-top: 20px;
  transition: all .5 ease;
  position: relative;
}

.project_comments_container {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto;
  position: relative;
  top: 0px;
  opacity: 0;
  display: none;
}

.project_comments_container::after {
  clear: both;
  content: "";
  display: table;
}

.project_comments_container .project_comments {
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 74.4105871005%;
  margin-left: 25.5894128995%;
  height: 350px;
}

.project_comments_container .project_comments:last-child {
  margin-right: 0;
}

.project_comments_container .project_comments h4 {
  color: green;
  text-transform: uppercase;
}

.project_comments_container .project_comments textarea {
  width: 100%;
  height: 100%;
  border: 2px solid #96244E;
  outline: 0;
  padding: 10px;
  font-family: "Lora", serif;
  font-size: 1.2em;
  background-color: transparent;
}

.successful_project_sent_container {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto;
  position: absolute;
  top: 245px;
  z-index: -100;
  opacity: 0;
  margin-left: 17.0596085997%;
}

.successful_project_sent_container::after {
  clear: both;
  content: "";
  display: table;
}

.successful_project_sent_container p {
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 57.3509785009%;
  margin-left: 17.0596085997%;
  font-size: 1.3em;
  font-family: "Lora", serif;
  line-height: 1.5em;
  letter-spacing: .025em;
  text-align: center;
}

.successful_project_sent_container p:last-child {
  margin-right: 0;
}

body {
  font-family: "Roboto", sans-serif;
  background-color: #DCE0E2;
}

.primary_button {
  width: 200px;
  height: 50px;
  background-color: transparent;
  border: 2px solid #96244E;
  color: #96244E;
  font-weight: 300;
  font-size: 1.2em;
  letter-spacing: 1px;
  transition: all 0.5s ease;
  outline: none;
}

.primary_button:hover {
  color: #FFFFFF;
  background-color: #96244E;
  cursor: pointer;
}

.home_container {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto;
  opacity: 0;
}

.home_container::after {
  clear: both;
  content: "";
  display: table;
}

/*# sourceMappingURL=data:application/json;base64, */